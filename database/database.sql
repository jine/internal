-- MySQL Script generated by MySQL Workbench
-- Wed 07 Oct 2015 07:29:09 AM CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema internal
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `internal` ;

-- -----------------------------------------------------
-- Schema internal
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `internal` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `internal` ;

-- -----------------------------------------------------
-- Table `internal`.`groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`groups` ;

CREATE TABLE IF NOT EXISTS `internal`.`groups` (
  `group_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `description` VARCHAR(64) NULL DEFAULT NULL,
  PRIMARY KEY (`group_id`),
  UNIQUE INDEX `name` (`name` ASC));


-- -----------------------------------------------------
-- Table `internal`.`member`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`member` ;

CREATE TABLE IF NOT EXISTS `internal`.`member` (
  `entity_id` INT(11) NOT NULL AUTO_INCREMENT,
  `member_number` INT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NULL DEFAULT NULL,
  `reset_token` CHAR(34) NULL DEFAULT NULL,
  `reset_expire` INT(11) NULL DEFAULT NULL,
  `firstname` VARCHAR(255) NULL DEFAULT NULL,
  `lastname` VARCHAR(255) NULL DEFAULT NULL,
  `civicregno` CHAR(13) NULL DEFAULT NULL,
  `company` VARCHAR(255) NULL DEFAULT NULL,
  `orgno` VARCHAR(12) NULL DEFAULT NULL,
  `address` VARCHAR(255) NULL DEFAULT NULL,
  `address2` VARCHAR(255) NULL DEFAULT NULL,
  `zipcode` INT(11) NULL DEFAULT NULL,
  `city` VARCHAR(64) NULL DEFAULT NULL,
  `country` CHAR(2) NULL DEFAULT 'SE',
  `phone` VARCHAR(64) NULL DEFAULT NULL,
  PRIMARY KEY (`entity_id`),
  UNIQUE INDEX `email` (`email` ASC));


-- -----------------------------------------------------
-- Table `internal`.`member_group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`member_group` ;

CREATE TABLE IF NOT EXISTS `internal`.`member_group` (
  `member_id` INT(11) NOT NULL,
  `group_id` INT(11) NOT NULL,
  INDEX `member_groups` (`member_id` ASC, `group_id` ASC),
  INDEX `group_id` (`group_id` ASC),
  CONSTRAINT `member_groups_ibfk_2`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`member` (`entity_id`),
  CONSTRAINT `member_groups_ibfk_1`
    FOREIGN KEY (`group_id`)
    REFERENCES `internal`.`groups` (`group_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT);


-- -----------------------------------------------------
-- Table `internal`.`member_rfid`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`member_rfid` ;

CREATE TABLE IF NOT EXISTS `internal`.`member_rfid` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `created_at` DATETIME NOT NULL COMMENT 'Timestamp',
  `updated_at` DATETIME NOT NULL,
  `member_id` INT(11) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `tagid` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`, `created_at`),
  UNIQUE INDEX `tagid` (`tagid` ASC),
  INDEX `member_id` (`member_id` ASC),
  CONSTRAINT `member_rfid_ibfk_1`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`member` (`entity_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT);


-- -----------------------------------------------------
-- Table `internal`.`config`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`config` ;

CREATE TABLE IF NOT EXISTS `internal`.`config` (
  `key` VARCHAR(64) NOT NULL COMMENT 'Config key-name',
  `value` VARCHAR(2048) NULL DEFAULT NULL,
  `desc` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Optional description of config',
  PRIMARY KEY (`key`));


-- -----------------------------------------------------
-- Table `internal`.`logins`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`logins` ;

CREATE TABLE IF NOT EXISTS `internal`.`logins` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `member_id` INT(11) NULL DEFAULT NULL,
  `ip_address` VARCHAR(64) NOT NULL,
  `timestamp` INT(11) NOT NULL,
  `valid` TINYINT(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  INDEX `user_id` (`member_id` ASC));


-- -----------------------------------------------------
-- Table `internal`.`accounting_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`accounting_category` ;

CREATE TABLE IF NOT EXISTS `internal`.`accounting_category` (
  `entity_id` INT(11) NOT NULL,
  PRIMARY KEY (`entity_id`),
  UNIQUE INDEX `entity_id_UNIQUE` (`entity_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`accounting_verification_series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`accounting_verification_series` ;

CREATE TABLE IF NOT EXISTS `internal`.`accounting_verification_series` (
  `entity_id` INT(11) NOT NULL,
  PRIMARY KEY (`entity_id`),
  UNIQUE INDEX `entity_id_UNIQUE` (`entity_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`accounting_instruction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`accounting_instruction` ;

CREATE TABLE IF NOT EXISTS `internal`.`accounting_instruction` (
  `entity_id` INT(11) NOT NULL,
  `instruction_number` VARCHAR(16) NULL,
  `accounting_date` DATETIME NULL,
  `accounting_category` INT(11) NULL,
  `importer` VARCHAR(45) NULL,
  `external_id` VARCHAR(255) NULL,
  `external_date` DATE NULL,
  `external_text` TEXT NULL,
  `external_data` TEXT NULL DEFAULT NULL,
  `accounting_verification_series` INT(11) NULL,
  PRIMARY KEY (`entity_id`),
  UNIQUE INDEX `verification_number_UNIQUE` (`instruction_number` ASC),
  INDEX `fk_accounting_verifications_1_idx` (`accounting_category` ASC),
  INDEX `fk_accounting_verifications_2_idx` (`accounting_verification_series` ASC),
  UNIQUE INDEX `entity_id_UNIQUE` (`entity_id` ASC),
  CONSTRAINT `fk_accounting_verifications_1`
    FOREIGN KEY (`accounting_category`)
    REFERENCES `internal`.`accounting_category` (`entity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_accounting_verifications_2`
    FOREIGN KEY (`accounting_verification_series`)
    REFERENCES `internal`.`accounting_verification_series` (`entity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`accounting_period`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`accounting_period` ;

CREATE TABLE IF NOT EXISTS `internal`.`accounting_period` (
  `entity_id` INT NOT NULL,
  `start` DATETIME NULL,
  `end` DATETIME NULL,
  PRIMARY KEY (`entity_id`),
  UNIQUE INDEX `entity_id_UNIQUE` (`entity_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`accounting_account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`accounting_account` ;

CREATE TABLE IF NOT EXISTS `internal`.`accounting_account` (
  `entity_id` INT NOT NULL,
  `account_number` INT NOT NULL,
  `accounting_period` INT NOT NULL,
  PRIMARY KEY (`entity_id`),
  UNIQUE INDEX `entity_id_UNIQUE` (`entity_id` ASC),
  INDEX `fk_accounting_account_1_idx` (`accounting_period` ASC),
  CONSTRAINT `fk_accounting_account_1`
    FOREIGN KEY (`accounting_period`)
    REFERENCES `internal`.`accounting_period` (`entity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`accounting_cost_center`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`accounting_cost_center` ;

CREATE TABLE IF NOT EXISTS `internal`.`accounting_cost_center` (
  `entity_id` INT(11) NOT NULL,
  PRIMARY KEY (`entity_id`),
  UNIQUE INDEX `entity_id_UNIQUE` (`entity_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`accounting_transaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`accounting_transaction` ;

CREATE TABLE IF NOT EXISTS `internal`.`accounting_transaction` (
  `entity_id` INT(11) NOT NULL,
  `accounting_instruction` INT(11) NOT NULL,
  `accounting_account` INT(11) NOT NULL,
  `accounting_cost_center` INT(11) NULL,
  `amount` INT NULL,
  `external_id` VARCHAR(45) NULL,
  PRIMARY KEY (`entity_id`),
  INDEX `fk_accounting_transactions_1_idx` (`accounting_instruction` ASC),
  INDEX `fk_accounting_transactions_2_idx` (`accounting_account` ASC),
  INDEX `fk_accounting_transactions_3_idx` (`accounting_cost_center` ASC),
  UNIQUE INDEX `entity_id_UNIQUE` (`entity_id` ASC),
  CONSTRAINT `fk_accounting_transactions_1`
    FOREIGN KEY (`accounting_instruction`)
    REFERENCES `internal`.`accounting_instruction` (`entity_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_accounting_transactions_2`
    FOREIGN KEY (`accounting_account`)
    REFERENCES `internal`.`accounting_account` (`entity_id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_accounting_transactions_3`
    FOREIGN KEY (`accounting_cost_center`)
    REFERENCES `internal`.`accounting_cost_center` (`entity_id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`transaction_member`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`transaction_member` ;

CREATE TABLE IF NOT EXISTS `internal`.`transaction_member` (
  `member_id` INT(11) NOT NULL,
  `accounting_transaction_id` INT(11) NOT NULL,
  PRIMARY KEY (`member_id`),
  INDEX `fk_transaction_member_2_idx` (`accounting_transaction_id` ASC),
  CONSTRAINT `fk_transaction_member_1`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`member` (`entity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_member_2`
    FOREIGN KEY (`accounting_transaction_id`)
    REFERENCES `internal`.`accounting_transaction` (`entity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`labaccess`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`labaccess` ;

CREATE TABLE IF NOT EXISTS `internal`.`labaccess` (
  `id` VARCHAR(45) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  `member_id` INT(11) NOT NULL,
  `date_start` DATETIME NULL,
  `duration` INT(4) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`member_id`),
  CONSTRAINT `fk_labaccess_1`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`member` (`entity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`transaction_labaccess`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`transaction_labaccess` ;

CREATE TABLE IF NOT EXISTS `internal`.`transaction_labaccess` (
  `labaccess_id` INT(11) NOT NULL,
  `accounting_transaction_id` INT(11) NOT NULL,
  PRIMARY KEY (`labaccess_id`, `accounting_transaction_id`),
  INDEX `fk_labaccess_transaction_2_idx` (`accounting_transaction_id` ASC),
  CONSTRAINT `fk_labaccess_transaction_1`
    FOREIGN KEY (`labaccess_id`)
    REFERENCES `internal`.`labaccess` (`member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_labaccess_transaction_2`
    FOREIGN KEY (`accounting_transaction_id`)
    REFERENCES `internal`.`accounting_transaction` (`entity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`invoice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`invoice` ;

CREATE TABLE IF NOT EXISTS `internal`.`invoice` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `invoice_number` INT NOT NULL,
  `date_invoice` DATETIME NULL,
  `conditions` INT(3) NULL,
  `our_reference` VARCHAR(80) NULL,
  `your_reference` VARCHAR(80) NULL,
  `recipient` VARCHAR(80) NULL,
  `address` TEXT NULL,
  `status` VARCHAR(45) NULL,
  `comments` TEXT NULL,
  PRIMARY KEY (`id`, `invoice_number`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`invoice_post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`invoice_post` ;

CREATE TABLE IF NOT EXISTS `internal`.`invoice_post` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `invoice_id` INT NULL,
  `type` VARCHAR(20) NULL,
  `title` VARCHAR(80) NULL,
  `price` DECIMAL(12,2) NULL,
  `vat` INT(3) NULL,
  `amount` INT NULL,
  `unit` VARCHAR(20) NULL,
  `weight` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_invoice_post_1_idx` (`invoice_id` ASC),
  CONSTRAINT `fk_invoice_post_1`
    FOREIGN KEY (`invoice_id`)
    REFERENCES `internal`.`invoice` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`entity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`entity` ;

CREATE TABLE IF NOT EXISTS `internal`.`entity` (
  `entity_id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  `deleted_at` DATETIME NULL,
  `title` VARCHAR(80) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`entity_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`entity_revision`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`entity_revision` ;

CREATE TABLE IF NOT EXISTS `internal`.`entity_revision` (
  `entity_id` INT NOT NULL,
  `revision_date` DATETIME NULL,
  PRIMARY KEY (`entity_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`relation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `internal`.`relation` ;

CREATE TABLE IF NOT EXISTS `internal`.`relation` (
  `entity1` INT NOT NULL,
  `entity2` INT NOT NULL,
  PRIMARY KEY (`entity2`, `entity1`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `internal`.`accounting_instruction`
-- -----------------------------------------------------
START TRANSACTION;
USE `internal`;
INSERT INTO `internal`.`accounting_instruction` (`entity_id`, `instruction_number`, `accounting_date`, `accounting_category`, `importer`, `external_id`, `external_date`, `external_text`, `external_data`, `accounting_verification_series`) VALUES (4, '1', '2015-05-17', NULL, NULL, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `internal`.`accounting_instruction` (`entity_id`, `instruction_number`, `accounting_date`, `accounting_category`, `importer`, `external_id`, `external_date`, `external_text`, `external_data`, `accounting_verification_series`) VALUES (8, '2', '2015-03-27', NULL, 'PayPal', '48195486', '2015-03-18', 'Medlemsavgift', '[id: 48195486]', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `internal`.`accounting_period`
-- -----------------------------------------------------
START TRANSACTION;
USE `internal`;
INSERT INTO `internal`.`accounting_period` (`entity_id`, `start`, `end`) VALUES (3, '2015-01-01', '2015-12-31');

COMMIT;


-- -----------------------------------------------------
-- Data for table `internal`.`accounting_account`
-- -----------------------------------------------------
START TRANSACTION;
USE `internal`;
INSERT INTO `internal`.`accounting_account` (`entity_id`, `account_number`, `accounting_period`) VALUES (1, 1930, 3);
INSERT INTO `internal`.`accounting_account` (`entity_id`, `account_number`, `accounting_period`) VALUES (2, 2999, 3);
INSERT INTO `internal`.`accounting_account` (`entity_id`, `account_number`, `accounting_period`) VALUES (7, 3890, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `internal`.`accounting_transaction`
-- -----------------------------------------------------
START TRANSACTION;
USE `internal`;
INSERT INTO `internal`.`accounting_transaction` (`entity_id`, `accounting_instruction`, `accounting_account`, `accounting_cost_center`, `amount`, `external_id`) VALUES (5, 4, 1, NULL, -500, NULL);
INSERT INTO `internal`.`accounting_transaction` (`entity_id`, `accounting_instruction`, `accounting_account`, `accounting_cost_center`, `amount`, `external_id`) VALUES (6, 4, 2, NULL, 500, NULL);
INSERT INTO `internal`.`accounting_transaction` (`entity_id`, `accounting_instruction`, `accounting_account`, `accounting_cost_center`, `amount`, `external_id`) VALUES (9, 8, 1, NULL, 780, NULL);
INSERT INTO `internal`.`accounting_transaction` (`entity_id`, `accounting_instruction`, `accounting_account`, `accounting_cost_center`, `amount`, `external_id`) VALUES (10, 8, 7, NULL, -780, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `internal`.`entity`
-- -----------------------------------------------------
START TRANSACTION;
USE `internal`;
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (1, 'accounting_account', NULL, NULL, NULL, 'Bankkonto', 'Bankkonto hos SEB');
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (2, 'accounting_account', NULL, NULL, NULL, 'OBS-konto', 'För bokföring av provisoriska transaktioner');
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (3, 'accounting_period', NULL, NULL, NULL, 'Räkneskapsår 2015', NULL);
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (4, 'accounting_instruction', NULL, NULL, NULL, 'Lokalhyra', NULL);
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (5, 'accounting_transaction', NULL, NULL, NULL, 'tr 1', NULL);
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (6, 'accounting_transaction', NULL, NULL, NULL, 'tr 2', NULL);
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (7, 'accounting_account', NULL, NULL, NULL, 'Medlemsintäkter', NULL);
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (8, 'accounting_intstruction', NULL, NULL, NULL, 'Medlemsavgifter', NULL);
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (9, 'accounting_transaction', NULL, NULL, NULL, 'tr 1', NULL);
INSERT INTO `internal`.`entity` (`entity_id`, `type`, `created_at`, `updated_at`, `deleted_at`, `title`, `description`) VALUES (10, 'accounting_transaction', NULL, NULL, NULL, 'tr 2', NULL);

COMMIT;

